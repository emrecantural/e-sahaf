{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _elementType = _interopRequireDefault(require(\"prop-types-extra/lib/elementType\"));\n\nvar _Message = _interopRequireDefault(require(\"./Message\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n/**\n * Display all Form validation `errors` in a single summary list.\n *\n * ```jsx { \"editable\": true }\n * <Form\n *   schema={modelSchema}\n *   defaultValue={modelSchema.default()}\n * >\n *   <Form.Summary/>\n *\n *   <Form.Field name='name.first' placeholder='first'/>\n *   <Form.Field name='name.last' placeholder='surname'/>\n *   <Form.Field name='dateOfBirth' placeholder='dob'/>\n *\n *   <Form.Submit>Validate</Form.Submit>\n * </Form>\n * ```\n */\n\n\nvar Summary =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inheritsLoose(Summary, _React$PureComponent);\n\n  function Summary() {\n    return _React$PureComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = Summary.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        formatMessage = _this$props.formatMessage,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"formatMessage\"]);\n\n    return _react.default.createElement(_Message.default, props, function (errors) {\n      return errors.map(formatMessage);\n    });\n  };\n\n  return Summary;\n}(_react.default.PureComponent);\n\nSummary.propTypes = {\n  /**\n   * An error message renderer, Should return a `ReactElement`\n   * ```\n   * function(\n   *   message: string,\n   *   idx: number,\n   *   errors: array\n   * ) -> ReactElement\n   * ```\n   */\n  formatMessage: _propTypes.default.func.isRequired,\n\n  /**\n   * A DOM node tag name or Component class the Message should render as.\n   */\n  as: _elementType.default.isRequired,\n\n  /**\n   * A css class that should be always be applied to the Summary container.\n   */\n  errorClass: _propTypes.default.string,\n\n  /**\n   * Specify a group to show errors for, if empty all form errors will be shown in the Summary.\n   */\n  group: _propTypes.default.string\n};\nSummary.defaultProps = {\n  as: 'ul',\n  formatMessage: function formatMessage(message, idx) {\n    return _react.default.createElement(\"li\", {\n      key: idx\n    }, message);\n  }\n};\nvar _default = Summary;\nexports.default = _default;\nmodule.exports = exports[\"default\"];","map":null,"metadata":{},"sourceType":"script"}