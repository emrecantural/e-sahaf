{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = errorManager;\n\nvar _errToJSON = _interopRequireDefault(require(\"./utils/errToJSON\"));\n\nvar _paths = require(\"./utils/paths\");\n\nvar _ErrorUtils = require(\"./utils/ErrorUtils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar isValidationError = function isValidationError(err) {\n  return err && err.name === 'ValidationError';\n};\n\nfunction errorManager(handleValidation) {\n  return {\n    collect: function collect(paths, pristineErrors, options) {\n      if (pristineErrors === void 0) {\n        pristineErrors = _ErrorUtils.EMPTY_ERRORS;\n      }\n\n      paths = (0, _paths.reduce)([].concat(paths));\n\n      var errors = _extends({}, pristineErrors);\n\n      var nextErrors = errors;\n      var workDone = false;\n      paths.forEach(function (path) {\n        nextErrors = (0, _paths.trim)(path, nextErrors);\n        if (errors !== nextErrors) workDone = true;\n      });\n      var validations = paths.map(function (path) {\n        return Promise.resolve(handleValidation(path, options)).then(function (validationError) {\n          if (!validationError) return true;\n          if (!isValidationError(validationError)) throw validationError;\n          (0, _errToJSON.default)(validationError, nextErrors);\n        });\n      });\n      return Promise.all(validations).then(function (results) {\n        if (!workDone && results.every(Boolean)) return pristineErrors;\n        return nextErrors;\n      });\n    }\n  };\n}\n\nmodule.exports = exports[\"default\"];","map":null,"metadata":{},"sourceType":"script"}