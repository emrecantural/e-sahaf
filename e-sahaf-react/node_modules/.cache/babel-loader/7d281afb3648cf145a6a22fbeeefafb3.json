{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emrec\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\e- Sahaf\\\\e-sahaf-react\\\\src\\\\components\\\\AnaSayfa\\\\4-KitapKayit\\\\KayitFormu.js\";\nimport React, { Component } from 'react';\nimport './alertform.css';\nimport validator from 'validator';\nimport axios from 'axios';\nimport nameValidator from './nameValidator';\n\nclass KayıtFormu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      givenurl: '',\n      period: 0,\n      requestType: 'POST',\n      error: '',\n      //error text if invalid url or already exists name \n      //or period 0. \n      ifInvalid: \"\",\n      //to make url input box red\n      //if invalid url  \n      ifNameExists: \"\",\n      //to make name input box red\n      //if name already exists\n      ifPeriodZero: \"\",\n      //to make period input box red\n      //if period is 0\n      ifAdded: \"black\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let name = this.state.name;\n    let url = this.state.givenurl;\n    let period = this.state.period;\n    let requestName = this.state.requestType;\n\n    if (validator.isURL(this.state.givenurl) && period !== 0 && nameValidator(name)) {\n      axios.post('http://localhost:8080/alerts', {\n        name: name,\n        url: url,\n        requestName: requestName,\n        period: period,\n        timeLeft: 0,\n        situations: []\n      }).then(message => {\n        this.setState({\n          error: message.data\n        });\n      }).catch(err => {\n        this.setState({\n          error: err.data\n        });\n      });\n      this.setState({\n        name: '',\n        givenurl: '',\n        period: 0,\n        requestType: 'POST',\n        ifInvalid: \"\",\n        ifNameExists: \"\",\n        ifPeriodZero: \"\",\n        ifAdded: \"black\"\n      });\n    } else {\n      if (!nameValidator(name)) {\n        this.setState({\n          error: \"Alert with the given name already exists\",\n          ifNameExists: \"2px solid red\",\n          ifAdded: \"red\"\n        });\n      } else if (!validator.isURL(this.state.givenurl)) {\n        this.setState({\n          error: \"Invalid URL\",\n          ifInvalid: \"2px solid red\",\n          ifAdded: \"red\"\n        });\n      } else if (period === 0) {\n        this.setState({\n          error: \"Period cannot be zero\",\n          ifPeriodZero: \"2px solid red\",\n          ifAdded: \"red\"\n        });\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"custom\",\n      style: {\n        border: this.state.ifNameExists\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Name:\", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"custom\",\n      style: {\n        border: this.state.ifInvalid\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"URL:\", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"givenurl\",\n      value: this.state.givenurl,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"custom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Request:\", React.createElement(\"select\", {\n      name: \"requestType\",\n      type: \"\",\n      value: this.state.requestType,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"POST\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"POST\"), React.createElement(\"option\", {\n      value: \"GET\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"GET\"), React.createElement(\"option\", {\n      value: \"DELETE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"DELETE\"), React.createElement(\"option\", {\n      value: \"PUT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"PUT\")))), React.createElement(\"div\", {\n      className: \"custom\",\n      style: {\n        border: this.state.ifPeriodZero\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Period:\", React.createElement(\"input\", {\n      type: \"number\",\n      className: \"Request\",\n      name: \"period\",\n      value: this.state.period,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"custom2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"Button\",\n      type: \"submit\",\n      value: \"SUBMIT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      style: {\n        color: this.state.ifAdded\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, this.state.error));\n  }\n\n}\n\nexport default KayitFormu;","map":{"version":3,"sources":["C:\\Users\\emrec\\OneDrive\\Masaüstü\\e- Sahaf\\e-sahaf-react\\src\\components\\AnaSayfa\\4-KitapKayit\\KayitFormu.js"],"names":["React","Component","validator","axios","nameValidator","KayıtFormu","constructor","props","state","name","givenurl","period","requestType","error","ifInvalid","ifNameExists","ifPeriodZero","ifAdded","handleChange","bind","handleSubmit","event","setState","target","value","preventDefault","url","requestName","isURL","post","timeLeft","situations","then","message","data","catch","err","render","border","color","KayitFormu"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './alertform.css'\r\nimport validator from 'validator';\r\nimport axios from 'axios';\r\nimport nameValidator from './nameValidator';\r\n\r\n\r\nclass KayıtFormu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {name: '',\r\n                      givenurl: '',\r\n                      period: 0,\r\n                      requestType: 'POST',\r\n                      error: '',                     //error text if invalid url or already exists name \r\n                                                     //or period 0. \r\n                      ifInvalid: \"\",                 //to make url input box red\r\n                                                     //if invalid url  \r\n                      ifNameExists: \"\",              //to make name input box red\r\n                                                     //if name already exists\r\n                      ifPeriodZero: \"\",              //to make period input box red\r\n                                                     //if period is 0\r\n                      ifAdded: \"black\",\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n    \r\n      handleChange(event) {\r\n        this.setState({\r\n          [event.target.name] : event.target.value\r\n        });\r\n        \r\n      }\r\n    \r\n      handleSubmit(event) {\r\n        event.preventDefault();\r\n        let name = this.state.name;\r\n        let url = this.state.givenurl;\r\n        let period = this.state.period;\r\n        let requestName = this.state.requestType;\r\n        if(validator.isURL(this.state.givenurl) \r\n           && period !== 0 \r\n           && nameValidator(name)){\r\n            axios.post('http://localhost:8080/alerts', {\r\n              name: name,\r\n              url: url,\r\n              requestName: requestName,\r\n              period: period,\r\n              timeLeft: 0,\r\n              situations: []\r\n            }).then(message=>{\r\n              this.setState({error : message.data })\r\n            }).catch(err => {\r\n              this.setState({error: err.data})\r\n            });\r\n            this.setState({name: '',\r\n                           givenurl: '',\r\n                            period: 0,\r\n                            requestType: 'POST',\r\n                            ifInvalid: \"\",\r\n                            ifNameExists: \"\",\r\n                            ifPeriodZero: \"\",\r\n                            ifAdded: \"black\",});       \r\n        }\r\n        else{\r\n            if(!nameValidator(name)){\r\n              this.setState({error : \"Alert with the given name already exists\",\r\n                             ifNameExists: \"2px solid red\",\r\n                             ifAdded: \"red\"});\r\n            }\r\n            else if(!validator.isURL(this.state.givenurl)){\r\n              this.setState({error : \"Invalid URL\",\r\n                             ifInvalid: \"2px solid red\",\r\n                             ifAdded: \"red\"});\r\n            }\r\n            else if(period === 0){\r\n              this.setState({error : \"Period cannot be zero\",\r\n                             ifPeriodZero: \"2px solid red\",\r\n                             ifAdded: \"red\"});\r\n            }\r\n        }\r\n        \r\n      }\r\n      render() {\r\n        \r\n        return (\r\n          <div className = \"Form\">\r\n            <form onSubmit={this.handleSubmit} >\r\n            <div className= \"custom\"\r\n                 style = {{border: this.state.ifNameExists}}>\r\n            <label  >\r\n                Name: \r\n                <input type=\"text\"\r\n                name = \"name\"\r\n                value={this.state.name} \r\n                onChange={this.handleChange}\r\n                required/>\r\n              </label>\r\n            </div>\r\n              <div className= \"custom\" \r\n                   style = {{border: this.state.ifInvalid}}>\r\n              <label  >\r\n                URL: \r\n                <input type=\"text\"              \r\n                name = \"givenurl\"\r\n                value={this.state.givenurl} \r\n                onChange={this.handleChange}\r\n                required/>\r\n              </label>\r\n              </div>\r\n              <div className= \"custom\">\r\n              <label>\r\n              Request:  \r\n              <select name=\"requestType\" \r\n                      type=\"\"\r\n                      value={this.state.requestType} \r\n                      onChange={this.handleChange}  >            \r\n                <option value = \"POST\">POST</option>\r\n                <option value= \"GET\">GET</option>\r\n                <option value= \"DELETE\">DELETE</option>\r\n                <option value= \"PUT\">PUT</option>\r\n              </select>\r\n              </label>\r\n              </div>\r\n              <div className= \"custom\"\r\n                   style= {{border: this.state.ifPeriodZero}}>\r\n              <label >\r\n                Period: \r\n                <input type=\"number\"\r\n                className =\"Request\"\r\n                name = \"period\"\r\n                value={this.state.period} \r\n                onChange={this.handleChange} \r\n                required/>\r\n              </label>\r\n              </div>\r\n              <div className= \"custom2\">\r\n              <input className=\"Button\" \r\n                     type=\"submit\" \r\n                     value=\"SUBMIT\" />\r\n              </div>\r\n            </form>\r\n              <div style={{color: this.state.ifAdded}}>{this.state.error}</div>\r\n          </div>\r\n        );\r\n      }\r\n      \r\n    }\r\nexport default KayitFormu;"]},"metadata":{},"sourceType":"module"}