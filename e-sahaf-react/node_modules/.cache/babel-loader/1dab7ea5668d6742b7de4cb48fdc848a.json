{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emrec\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\e- Sahaf\\\\e-sahaf-react\\\\src\\\\components\\\\AnaSayfa\\\\4-KitapKayit\\\\KitapKayitFormu.js\";\nimport React, { Component } from 'react';\n\nclass KitapKayitFormu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      category: '',\n      author: '',\n      name: '',\n      SUMMARY: '',\n      error: '',\n      //error text if invalid url or already exists name \n      //or period 0. \n      ifInvalid: \"\",\n      //to make url input box red\n      //if invalid url  \n      ifNameExists: \"\",\n      //to make name input box red\n      //if name already exists\n      ifPeriodZero: \"\",\n      //to make period input box red\n      //if period is 0\n      ifAdded: \"black\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let name = this.state.name;\n    let url = this.state.givenurl;\n    let period = this.state.period;\n    let requestName = this.state.requestType;\n\n    if (validator.isURL(this.state.givenurl) && period !== 0 && nameValidator(name)) {\n      axios.post('http://localhost:8080/alerts', {\n        name: name,\n        url: url,\n        requestName: requestName,\n        period: period,\n        timeLeft: 0,\n        situations: []\n      }).then(message => {\n        this.setState({\n          error: message.data\n        });\n      }).catch(err => {\n        this.setState({\n          error: err.data\n        });\n      });\n      this.setState({\n        name: '',\n        givenurl: '',\n        period: 0,\n        requestType: 'POST',\n        ifInvalid: \"\",\n        ifNameExists: \"\",\n        ifPeriodZero: \"\",\n        ifAdded: \"black\"\n      });\n    } else {\n      if (!nameValidator(name)) {\n        this.setState({\n          error: \"Alert with the given name already exists\",\n          ifNameExists: \"2px solid red\",\n          ifAdded: \"red\"\n        });\n      } else if (!validator.isURL(this.state.givenurl)) {\n        this.setState({\n          error: \"Invalid URL\",\n          ifInvalid: \"2px solid red\",\n          ifAdded: \"red\"\n        });\n      } else if (period === 0) {\n        this.setState({\n          error: \"Period cannot be zero\",\n          ifPeriodZero: \"2px solid red\",\n          ifAdded: \"red\"\n        });\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default KitapKayitFormu;","map":{"version":3,"sources":["C:\\Users\\emrec\\OneDrive\\Masaüstü\\e- Sahaf\\e-sahaf-react\\src\\components\\AnaSayfa\\4-KitapKayit\\KitapKayitFormu.js"],"names":["React","Component","KitapKayitFormu","constructor","props","state","category","author","name","SUMMARY","error","ifInvalid","ifNameExists","ifPeriodZero","ifAdded","handleChange","bind","handleSubmit","event","setState","target","value","preventDefault","url","givenurl","period","requestName","requestType","validator","isURL","nameValidator","axios","post","timeLeft","situations","then","message","data","catch","err","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nclass KitapKayitFormu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {category: '',\r\n                    author: '',\r\n                    name:'',\r\n                    SUMMARY:'',\r\n                      error: '',                     //error text if invalid url or already exists name \r\n                                                     //or period 0. \r\n                      ifInvalid: \"\",                 //to make url input box red\r\n                                                     //if invalid url  \r\n                      ifNameExists: \"\",              //to make name input box red\r\n                                                     //if name already exists\r\n                      ifPeriodZero: \"\",              //to make period input box red\r\n                                                     //if period is 0\r\n                      ifAdded: \"black\",\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n    \r\n      handleChange(event) {\r\n        this.setState({\r\n          [event.target.name] : event.target.value\r\n        });\r\n        \r\n      }\r\n    \r\n      handleSubmit(event) {\r\n        event.preventDefault();\r\n        let name = this.state.name;\r\n        let url = this.state.givenurl;\r\n        let period = this.state.period;\r\n        let requestName = this.state.requestType;\r\n        if(validator.isURL(this.state.givenurl) \r\n           && period !== 0 \r\n           && nameValidator(name)){\r\n            axios.post('http://localhost:8080/alerts', {\r\n              name: name,\r\n              url: url,\r\n              requestName: requestName,\r\n              period: period,\r\n              timeLeft: 0,\r\n              situations: []\r\n            }).then(message=>{\r\n              this.setState({error : message.data })\r\n            }).catch(err => {\r\n              this.setState({error: err.data})\r\n            });\r\n            this.setState({name: '',\r\n                           givenurl: '',\r\n                            period: 0,\r\n                            requestType: 'POST',\r\n                            ifInvalid: \"\",\r\n                            ifNameExists: \"\",\r\n                            ifPeriodZero: \"\",\r\n                            ifAdded: \"black\",});       \r\n        }\r\n        else{\r\n            if(!nameValidator(name)){\r\n              this.setState({error : \"Alert with the given name already exists\",\r\n                             ifNameExists: \"2px solid red\",\r\n                             ifAdded: \"red\"});\r\n            }\r\n            else if(!validator.isURL(this.state.givenurl)){\r\n              this.setState({error : \"Invalid URL\",\r\n                             ifInvalid: \"2px solid red\",\r\n                             ifAdded: \"red\"});\r\n            }\r\n            else if(period === 0){\r\n              this.setState({error : \"Period cannot be zero\",\r\n                             ifPeriodZero: \"2px solid red\",\r\n                             ifAdded: \"red\"});\r\n            }\r\n        }\r\n        \r\n      }\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default KitapKayitFormu;"]},"metadata":{},"sourceType":"module"}